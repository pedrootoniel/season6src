#pragma once
// -------------------------------------------------------------------------------
#include "Protocol.h"
// -------------------------------------------------------------------------------

enum eSkillNumber
{
	SKILL_NONE = 0,
	SKILL_POISON = 1,
	SKILL_METEORITE = 2,
	SKILL_LIGHTNING = 3,
	SKILL_FIRE_BALL = 4,
	SKILL_FLAME = 5,
	SKILL_TELEPORT = 6,
	SKILL_ICE = 7,
	SKILL_TWISTER = 8,
	SKILL_EVIL_SPIRIT = 9,
	SKILL_HELL_FIRE = 10,
	SKILL_POWER_WAVE = 11,
	SKILL_AQUA_BEAM = 12,
	SKILL_BLAST = 13,
	SKILL_INFERNO = 14,
	SKILL_TELEPORT_ALLY = 15,
	SKILL_MANA_SHIELD = 16,
	SKILL_ENERGY_BALL = 17,
	SKILL_DEFENSE = 18,
	SKILL_FALLING_SLASH = 19,
	SKILL_LUNGE = 20,
	SKILL_UPPERCUT = 21,
	SKILL_CYCLONE = 22,
	SKILL_SLASH = 23,
	SKILL_TRIPLE_SHOT = 24,
	SKILL_HEAL = 26,
	SKILL_GREATER_DEFENSE = 27,
	SKILL_GREATER_DAMAGE = 28,
	SKILL_SUMMON1 = 30,
	SKILL_SUMMON2 = 31,
	SKILL_SUMMON3 = 32,
	SKILL_SUMMON4 = 33,
	SKILL_SUMMON5 = 34,
	SKILL_SUMMON6 = 35,
	SKILL_SUMMON7 = 36,
	SKILL_DECAY = 38,
	SKILL_ICE_STORM = 39,
	SKILL_NOVA = 40,
	SKILL_TWISTING_SLASH = 41,
	SKILL_RAGEFUL_BLOW = 42,
	SKILL_DEATH_STAB = 43,
	SKILL_CRESCENT_MOON_SLASH = 44,
	SKILL_MANA_GLAIVE = 45,
	SKILL_STAR_FALL = 46,
	SKILL_IMPALE = 47,
	SKILL_GREATER_LIFE = 48,
	SKILL_FIRE_BREATH = 49,
	SKILL_MONSTER_AREA_ATTACK = 50,
	SKILL_ICE_ARROW = 51,
	SKILL_PENETRATION = 52,
	SKILL_FIRE_SLASH = 55,
	SKILL_POWER_SLASH = 56,
	SKILL_SPIRAL_SLASH = 57,
	SKILL_NOVA_START = 58,
	SKILL_COMBO = 59,
	SKILL_FORCE = 60,
	SKILL_FIRE_BURST = 61,
	SKILL_EARTHQUAKE = 62,
	SKILL_SUMMON_PARTY = 63,
	SKILL_GREATER_CRITICAL_DAMAGE = 64,
	SKILL_ELECTRIC_SPARK = 65,
	SKILL_FORCE_WAVE = 66,
	SKILL_STERN = 67,
	SKILL_REMOVE_STERN = 68,
	SKILL_GREATER_MANA = 69,
	SKILL_INVISIBILITY = 70,
	SKILL_REMOVE_INVISIBILITY = 71,
	SKILL_REMOVE_ALL_EFFECT = 72,
	SKILL_MANA_RAYS = 73,
	SKILL_FIRE_BLAST = 74,
	SKILL_BRAND = 75,
	SKILL_PLASMA_STORM = 76,
	SKILL_INFINITY_ARROW = 77,
	SKILL_FIRE_SCREAM = 78,
	SKILL_EXPLOSION = 79,
	SKILL_MONSTER_SUMMON = 200,
	SKILL_MAGIC_DAMAGE_IMMUNITY = 201,
	SKILL_PHYSI_DAMAGE_IMMUNITY = 202,
	SKILL_ORDER_OF_PROTECTION = 210,
	SKILL_ORDER_OF_RESTRAINT = 211,
	SKILL_ORDER_OF_TRACKING = 212,
	SKILL_ORDER_OF_WEAKEN = 213,
	SKILL_DRAIN_LIFE = 214,
	SKILL_CHAIN_LIGHTNING = 215,
	SKILL_ELECTRIC_SURGE = 216,
	SKILL_DAMAGE_REFLECT = 217,
	SKILL_SWORD_POWER = 218,
	SKILL_SLEEP = 219,
	SKILL_LESSER_DAMAGE = 221,
	SKILL_LESSER_DEFENSE = 222,
	SKILL_SAHAMUTT = 223,
	SKILL_NEIL = 224,
	SKILL_GHOST_PHANTOM = 225,
	SKILL_RED_STORM = 230,
	SKILL_FROZEN_STAB = 232,
	SKILL_MAGIC_CIRCLE = 233,
	SKILL_SHIELD_RECOVER = 234,
	SKILL_FIVE_SHOT = 235,
	SKILL_SWORD_SLASH = 236,
	SKILL_LIGHTNING_STORM = 237,
	SKILL_BIRDS = 238,
	SKILL_SELF_EXPLOSION = 239,
	SKILL_RAKLION_SELUPAN1 = 250,
	SKILL_RAKLION_SELUPAN2 = 251,
	SKILL_RAKLION_SELUPAN3 = 252,
	SKILL_RAKLION_SELUPAN4 = 253,
	SKILL_LARGE_RING_BLOWER = 260,
	SKILL_UPPER_BEAST = 261,
	SKILL_CHAIN_DRIVER = 262,
	SKILL_DARK_SIDE = 263,
	SKILL_DRAGON_LORE = 264,
	SKILL_DRAGON_SLAYER = 265,
	SKILL_GREATER_IGNORE_DEFENSE_RATE = 266,
	SKILL_FITNESS = 267,
	SKILL_GREATER_DEFENSE_SUCCESS_RATE = 268,
	SKILL_CHARGE = 269,
	SKILL_PHOENIX_SHOT = 270,
	SKILL_BLOOD_STORM = 344,
	SKILL_CURE = 425,
	SKILL_PARTY_HEAL = 426,
	SKILL_POISON_ARROW = 427,
	SKILL_BLESS = 430,
	SKILL_SUMMON_SATYROS = 432,
	SKILL_BLIND = 461,
	SKILL_EARTH_PRISON = 495,
	SKILL_IRON_DEFENSE = 521,
	SKILL_BLOOD_HOWLING = 565,
};

struct PMSG_OFFLINEMODE_REQ
{
	PSBMSG_HEAD	Head;
	// ----
	int OffType;
	int SkillData[3];
	int SkillIndex[3];
	char SkillName[3][32];
	int DrawBuff;
	int DrawPick;
};

enum OffModeType
{
	TYPE_DW,
	TYPE_DK,
	TYPE_FE,
	TYPE_BMG,
	TYPE_EMG,
	TYPE_DL,
	TYPE_SU,
	TYPE_RF,
};

struct SKILL_COORD
{
	float StartX;
	float StartY;
	DWORD EventTick;
};

struct CHECKBOX_DATA
{
	bool UseBuff;
	bool PickZen;
	bool PickJewels;
	bool PickExe;
	bool PickAnc;
	bool PickSelected;
};

struct PMSG_OFFLINEMODE_DATA_SEND
{
	PSBMSG_HEAD	header;
	// ----
	int SkillID;
	bool UseBuff;
	bool PickZen;
	bool PickJewels;
	bool PickExe;
	bool PickAnc;
	bool PickSelected;
};
// -------------------------------------------------------------------------------

class cOfflineMode
{
public:
	cOfflineMode();
	virtual ~cOfflineMode();
	void CGOfflineModeSend();
	void GCOfflineModeRecv(PMSG_OFFLINEMODE_REQ* Data);
	void DrawSkill(int Skill, int StartX);
	float GetSkillX(int index);
	float GetSkillY(int index);
	void ClearSelectedSkill();
	void ChangeCheckBox(int index);
	bool GetCheckBox(int index);
	void SendOffExpData();
public:
	int OfflineType;
	int SkillsData[3];
	int SkillsIndex[3];
	char SkillsName[3][32];
	bool SelectedSkill[3];
	int DrawBuff;
	int DrawPick;
	// ----
	CHECKBOX_DATA Checkbox_Data;
	// ----
	SKILL_COORD m_SkillCoord[3];
}; extern cOfflineMode gOfflineMode;